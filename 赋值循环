1）赋值
	a) 序列解包/可迭代解包
	   多个赋值：x,y,z = 1,2,3
	   交换变量：x,y = y,x
	   解包的序列中的元素熟练必须和放置在赋值符合=左边的变量熟练完全一致，否则会报错

	b) 链式赋值
	   x = y = 2
	
	c) 增量赋值
	   x += 1
2)is 同一性运算符
	x = y = [1,2,3]
	z = [1,2,3]
	x == y >>>True; x==z >>>True;  x is y >>True; x is z >>>False

	I.  is运算符是判断同一性而不是相等性，x和y都指向同一个列表所以 is同一个。而z被指向另一个具有相同值的列表上，所以x和z值相等，却不是同一个对象。
	II. == 是判断两个对象是否相等，is是判断两者是否是同一个对象

3）assert：确保程序中某个条件一定为真才可以正常工作
	assert 3 < x < 10  :如果x不在值范围内就会报错

4）循环遍历字典元素
	d = {'x':1,'y':2,'z':3}
	for key in d:
		print key,d[key]

	for k,v in d.items():
		print k,v

5）迭代工具
	a. 并行迭代：zip ：用于多个序列并行迭代，各序列长度可以不一样，当最短的序列用完就停止
	
	    	x = [1,2,3] y = [1,2,3,4,5] z = [1,2,3,4,5,6]
	    	zip(x,y,z) >>> [(1,1,1),(2,2,2),(3,3,3)]
	    	循环中解包元组列表：
		for i,j,h in zip(x,y,z):
			print i,j,h

	b. enumerate:编号迭代,可以在序列迭代时提供索引
		x = 'abcdefg'
		for i,s in enumerate(x):
    			print i,s 	
		>>>0 a
		>>>1 b
		>>>.
		>>>.
		>>>6 g
	
	c.翻转和排序迭代
		sorted：返回列表
		reversed：返回一个可迭代的对象，可以在for、join方法中使用。不能直接对它使用索引、分片以及调用list方法，如果希望进行上述处理，那么可以使用list类型转换返回的对象。
		list(reversed('hellow'))

6) 列表推导式：利用其它列表创建新列表的一种方法。
	a. >>> [x*x for x in range(10)]  #由range(10)中每个x的平方组成一个列表
	   >>> [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]
	b. #加条件 只打印偶数的平方
	   >>> [x*x for x in range(10) if x%2==0]
	   >>> [0, 4, 16, 36, 64]

	c. 多个for
	    [(x,y) for x in range(3) for y in range(4)]
              >>>[(0, 0),(0, 1),(0, 2),(0, 3),
	      >>> (1, 0),(1, 1),(1, 2),(1, 3),
	      >>> (2, 0),(2, 1),(2, 2),(2, 3)]
	

